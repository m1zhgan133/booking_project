image: docker:latest

services:
  - docker:dind
  - postgres:16-alpine

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:latest
  DOCKER_HOST: tcp://docker:2375
  POSTGRES_DB: test_db
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: secure_password

stages:
  - build
  - test
  - deploy

build_image:
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY" <<< "$CI_JOB_TOKEN"  # Аутентификация в GitLab Registry
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
  artifacts:
    paths:
      - docker-compose.yml

test:
  stage: test
  services:
    - postgres:16-alpine
  script:
    - docker pull $IMAGE_NAME  # Получаем собранный образ
    - docker run --rm \
      --network host \
      -e DATABASE_URL="postgresql://runner:secure_password@postgres:5432/test_db" \
      $IMAGE_NAME pytest /app/tests -v  # Запуск тестов

deploy:
  stage: deploy
  only:
    - main
  environment:
    name: production
  script:
    - docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY" <<< "$CI_JOB_TOKEN"
    - docker-compose -f docker-compose.prod.yml up -d